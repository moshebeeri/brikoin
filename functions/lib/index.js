"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const functions = require('firebase-functions');
const admin = require('firebase-admin');
admin.initializeApp(functions.config().firebase);
// import * as plaidFn from "./plaid-functions";
const calculator = __importStar(require("./operations/calculator"));
const payments = __importStar(require("./payment-functions"));
const scheduler = __importStar(require("./scheduler/scheduler"));
const groupsTest = __importStar(require("./intergrationTest/groupsFlow"));
const negotiationApiTest = __importStar(require("./intergrationTest/negotiationApiTest"));
const adminTools = __importStar(require("./adminTools/tools"));
const triggerJob = __importStar(require("./intergrationTest/triggerJob"));
const signPdf = __importStar(require("./signPdf/signPdfOperation"));
const invest = __importStar(require("./invest-functions"));
const emails = __importStar(require("./email/email-functions"));
const trader = __importStar(require("./orderBook/order-book-functions"));
const userLedger = __importStar(require("./operations/userLedger"));
const collectionsApi = __importStar(require("./operations/collectionsApi"));
const groupsSearchEngine = __importStar(require("./operations/groupsSearchEngine"));
const auctionTrade = __importStar(require("./auctionOrderBook/auction-book"));
const depositCoins = __importStar(require("./operations/depositCoins"));
const organizationOperations = __importStar(require("./operations/orgainzationOperations"));
const initialProject = __importStar(require("./operations/initialProject"));
const yieldPayment = __importStar(require("./operations/yieldPayment"));
const userSearchEngine = __importStar(require("./operations/userSearchEngine"));
const usersApi = __importStar(require("./operations/usersApi"));
const negotiationApi = __importStar(require("./operations/negotiationApi"));
const bidAsk = __importStar(require("./operations/bidAsk"));
const groups = __importStar(require("./operations/groups"));
const groupsApi = __importStar(require("./operations/groupsApi"));
const projectsSearchEngine = __importStar(require("./operations/projectsSearchEngine"));
const brokerApi = __importStar(require("./operations/brokerApi"));
const projectsApi = __importStar(require("./operations/projectsApi"));
const projectOperation = __importStar(require("./operations/projectOperation"));
const caseApi = __importStar(require("./operations/caseApi"));
const brokerOperations = __importStar(require("./operations/brokerOperations"));
const userOperations = __importStar(require("./operations/userOperations"));
const flexOperations = __importStar(require("./flex/flexOperations"));
const paymentOperations = __importStar(require("./payment/paymetOperations"));
const caseOperations = __importStar(require("./operations/caseOperations"));
const projectManagment = __importStar(require("./operations/projectManagment"));
const internalAccount = __importStar(require("./operations/internalAccount"));
const userDisposition = __importStar(require("./operations/userDisposition"));
const userFeesState = __importStar(require("./operations/userFeesState"));
const mortgageOperations = __importStar(require("./operations/mortgageOperations"));
const collections = __importStar(require("./operations/collections"));
const customerChanels = __importStar(require("./operations/customerChanels"));
module.exports = Object.assign({}, organizationOperations, payments, groups, projectsSearchEngine, negotiationApi, projectOperation, projectsApi, groupsApi, groupsTest, negotiationApiTest, scheduler, signPdf, adminTools, caseApi, userSearchEngine, brokerApi, userLedger, triggerJob, brokerOperations, calculator, collections, userFeesState, userDisposition, mortgageOperations, projectManagment, bidAsk, usersApi, internalAccount, yieldPayment, flexOperations, paymentOperations, groupsSearchEngine, invest, collectionsApi, emails, depositCoins, initialProject, trader, caseOperations, customerChanels, userOperations, auctionTrade);
//# sourceMappingURL=index.js.map